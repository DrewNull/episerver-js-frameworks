@using ClassicalMusicShop.Website.Features.Images
@model ClassicalMusicShop.Website.Features.SheetMusic.SheetMusicViewModel
@functions
{
    object CreateImageModel(ImageMediaModel model)
    {
        return new
        {
            src = model.Url,
            alt = model.Media.Title
        };
    }
}
@{
    Layout = "~/Features/Layout/Views/MainLayoutReact.cshtml";

    var quantities = Model.AddToCartQuantities
        .Select(x => int.Parse(x.Value))
        .ToArray();

    var variants = Model.VariantViewModels
        .Select(x => new
        {
            code = x.VariantModel.Variant.Code,
            price = x.VariantModel.Price,
            mainImage = CreateImageModel(x.MainImageModel),
            instrument = x.VariantModel.Variant.Instrument
        })
        .ToArray();

    var productImage = CreateImageModel(Model.ProductViewModel.MainImageModel);
}
<div cms-sheet-music-page
     data-cms-quantities="@Json.Encode(quantities)"
     data-cms-variants="@Json.Encode(variants)"
     data-cms-product-image="@Json.Encode(productImage)"></div>
<div class="grid-container">
    <div class="grid-x grid-padding-x">
        <div class="cell small-12 medium-6 large-5">
            <div cms-sheet-music-page-image></div>
        </div>
        <div class="cell small-12 medium-6 large-6 large-offset-1">
            <nav>
                <ul class="breadcrumbs">
                    <li>
                        <a href="/"><i class="fi-home"></i></a>
                    </li>
                    <li>
                        <a href="/sheet-music">Sheet Music</a>
                    </li>
                </ul>
            </nav>

            <h4 @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.DisplayName)>
                @Model.ProductViewModel.ProductModel.Product.DisplayName
            </h4>

            <hr />

            <div cms-sheet-music-page-variant></div>

            <hr />

            <h5>Details</h5>
            <table>
                <tr>
                    <td>Composer</td>
                    <td>
                        <div @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.Composer)>
                            @Model.ProductViewModel.ProductModel.Product.Composer
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Opus</td>
                    <td>
                        <div @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.Opus)>
                            Op.@Model.ProductViewModel.ProductModel.Product.Opus
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Key</td>
                    <td>
                        <div @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.Key)>
                            @Model.ProductViewModel.ProductModel.Product.Key
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Movements</td>
                    <td>
                        <div @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.MovementList)>
                            @Html.Raw(Model.ProductViewModel.ProductModel.Product.MovementList.Replace("\n", "<br />"))
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Year</td>
                    <td>
                        <div @Html.EditAttributes(x => x.ProductViewModel.ProductModel.Product.YearComposed)>
                            @Model.ProductViewModel.ProductModel.Product.YearComposed
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>